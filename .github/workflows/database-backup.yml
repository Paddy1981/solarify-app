# =============================================================================
# Database Backup Workflow
# A workflow to trigger a database backup with a choice of environment.
# =============================================================================
name: 💾 Database Backup

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'The deployment environment to back up.'
        required: false
        default: 'production' 
        type: choice
        options:
          - 'production'
          - 'staging'

env:
  PROJECT_ID: solarify-${{ github.event.inputs.environment }}

jobs:
  backup-database:
    name: 💾 Backup Database
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔐 Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          project_id: ${{ env.PROJECT_ID }}

      - name: 🛠️ Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: 🚀 Run Firestore backup
        id: firestore-backup
        run: |
          echo "Starting backup for Firestore database in ${{ github.event.inputs.environment }} environment..."
          gcloud firestore export gs://${{ env.PROJECT_ID }}-backups/backups/${{ github.event.inputs.environment }}/$(date +"%Y-%m-%d-%H-%M-%S")
          echo "✅ Firestore backup completed successfully."

      - name: 🚀 Run Cloud SQL backup
        id: cloudsql-backup
        run: |
          echo "Starting backup for Cloud SQL instance in ${{ github.event.inputs.environment }} environment..."
          # Replace 'your-cloud-sql-instance' with your actual instance name
          gcloud sql backups create --instance=your-cloud-sql-instance --async
          echo "✅ Cloud SQL backup initiated."
          
      - name: 📢 Notify backup status
        # CORRECTED LINE: The 'if' condition now has the required ${{ ... }} syntax.
        if: ${{ secrets.SLACK_WEBHOOK != '' }}
        uses: 8398a7/action-slack@v3
        with:
          status: success
          custom_payload: |
            {
              "text": "💾 Database Backup for *${{ github.event.inputs.environment }}* Environment",
              "attachments": [
                {
                  "color": "#36a64f",
                  "fields": [
                    {
                      "title": "Status",
                      "value": "✅ Success",
                      "short": true
                    },
                    {
                      "title": "Environment",
                      "value": "${{ github.event.inputs.environment }}",
                      "short": true
                    },
                    {
                      "title": "Project ID",
                      "value": "${{ env.PROJECT_ID }}",
                      "short": true
                    },
                    {
                      "title": "Triggered By",
                      "value": "${{ github.actor }}",
                      "short": true
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
